version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
    container_name: vinyl-frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules # Prevents the node_modules directory from being overridden by the container
        # (avoid conflicts between the dependencies installed on the host machine and those installed inside the container)
      - ./database/sample_data/images:/app/media # Shared volume for album art and other media files
    environment:
      - REACT_APP_API_BASE_URL # `/api`
      - CHOKIDAR_INTERVAL=100
      - CHOKIDAR_USEPOLLING # File change detection for reload
      - WDS_SOCKET_PORT=0 # Use the default Webpack Dev Server socket port (needed for hot reloading)
    env_file:
      - .env
    depends_on:
      - backend # Only startup after the backend service is up
    networks:
      - vinyl-network

  # Local backend changes are automatically reflected in the container upon saving
  # (Exception: changes to the Dockerfile require a rebuild)
  backend:
    build:
      context: ./backend
    container_name: vinyl-backend
    volumes:
      - ./backend:/usr/src/app
      - ./neural-quarter-470623-r2-e3891a759a91.json:/app/gcp-credentials.json:ro
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    environment:
      - PYTHONUNBUFFERED=1
      - DISCOGS_TOKEN=${DISCOGS_TOKEN}
      - DATABASE_URL
      - MEDIA_DIR
      - NUMBA_DEBUG=0
      - GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-credentials.json
    env_file:
      - .env
    networks:
      - vinyl-network

  nginx:
    image: nginx:latest
    container_name: vinyl-nginx
    ports:
      - "80:80"
    volumes:
      - ./frontend/build:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/favicon.ico:/etc/nginx/favicon.ico:ro
      - ./database/sample_data/images:/media:ro
    depends_on:
      - frontend
      - backend
    networks:
      - vinyl-network

volumes:
  media_volume:

networks:
  vinyl-network:
    # Custom network for inter-container communication
